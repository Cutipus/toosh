<div class="flex h-full w-9/12 flex-col gap-20">
  <div class="h-1/5"></div>
  <section id="about-text" class="mt-3 flex flex-col pr-4">
    <h1 class="text-medium font-narkiss underline">toosh.dsgn</h1>
    <p id="hi" class="blinking-cursor text-black-600 mt-2 font-narkiss text-big uppercase blur-[0.04rem] contrast-200">
      I'm <b>Itamar</b>, a freelance <b>Graphic/Motion Designer</b> from TLV.
    </p>
    <p class="blinking-cursor text-black-600 mt-20 font-narkiss text-big uppercase blur-[0.04rem] contrast-200">
      Mainly focusing on <b>Motion Design, Video making & Animation</b>, but enjoy making and co-making all sorts of art and
      design.
    </p>
  </section>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const elem = document.getElementById("about-text");
    const preservedInner = elem.innerHTML;
    elem.innerHTML = "";
    animate(elem, parseNode(preservedInner));
  });

  function parseNode(html) {
    const tempDiv = document.createElement("div");
    tempDiv.innerHTML = html;

    let out = document.createElement("p");
    return processChildNodes(tempDiv, out);
  }

  function* processChildNodes(tempy, out) {
    for (const node of tempy.childNodes) {
      if (node.nodeType === Node.TEXT_NODE) {
        for (const char of node.textContent) {
          out.append(char);
          yield out.innerHTML;
        }
      } else if (node.nodeType === Node.ELEMENT_NODE) {
        const newElement = document.createElement(node.tagName.toLowerCase());
        for (const { name, value } of node.attributes) {
          newElement.setAttribute(name, value);
        }
        out.appendChild(newElement);
        for (const processed of processChildNodes(node, newElement)) {
          yield out.innerHTML;
        }
      }
    }
  }

  function animate(elem, gen) {
    let lastTimestamp;

    function step(timestamp) {
      if (lastTimestamp == undefined) {
        lastTimestamp = timestamp;
      }
      const delta = lastTimestamp - timestamp;
      lastTimestamp = timestamp;
      res = gen.next();
      if (!res.done) {
        elem.innerHTML = res.value;
        requestAnimationFrame(step);
      }
    }

    requestAnimationFrame(step);
  }
</script>
